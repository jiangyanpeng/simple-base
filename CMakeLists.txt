CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(simple.base)

######## COMPILE #######
SET(CMAKE_EXPORT_COMPILE_COMMANDS TRUE)
SET(CMAKE_BUILD_TYPE "DEBUG")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Werror")
SET(CMAKE_CXX_FLAGS "${CAMKE_CXX_FLAGS} -std=c++11 -march=native -O3 -pthread")
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/build/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/build/lib)

OPTION(BUILD_USE_AVX           "Use AVX"                    OFF)
OPTION(BUILD_ENABLE_BENCHMARK  "Enable Benchmark"           OFF)

# IF(BUILD_USE_ENPU MATCHES ON)
#     ADD_DEFINITIONS(-DUSE_ENPU)
#     SET(USE_ENPU_MACRO "#define USE_ENPU\n")
#     INCLUDE(cmake/enpu_config.cmake)
#     MESSAGE(STATUS "Using ENPU_VERSION: ${ENPU_VERSION}")
#     MESSAGE(STATUS "Using FORCE_32BIT_BUILD: ${FORCE_32BIT_BUILD}")
# ELSE()
#     INCLUDE(cmake/x86_config.cmake)
#     MESSAGE(STATUS "Using C: ${CMAKE_C_COMPILER_VERSION}")
# ENDIF()

# IF(BUILD_USE_STB MATCHES ON)
#     ADD_DEFINITIONS(-DSTB_IMAGE_IMPLEMENTATION)
# 	ADD_DEFINITIONS(-DSTB_IMAGE_WRITE_IMPLEMENTATION)
# ENDIF()

######## CONFIG OPTION ######
SET(VERSION "1.0.0")
CONFIGURE_FILE(
    "${PROJECT_SOURCE_DIR}/src/config.h.in"
    "${PROJECT_BINARY_DIR}/config.h")
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})

####### INCLUDE #######
INCLUDE_DIRECTORIES(
    ${PROJECT_SOURCE_DIR}/include
)
# INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src)

####### SOURCES (Projects) #######
FILE(GLOB_RECURSE base_src ${PROJECT_SOURCE_DIR}/src/*.cc)


####### LIBS #######
# thirdparty
SET(THIRD_PARTY_LIBS
    #${OpenCV_LIBS}
    #${EIGEN3_LIBS}
)

# INTERNAL LIBS #
SET(SIMPLE_BASE_LIBS simple_base)

####### build static lib #######
ADD_LIBRARY(${SIMPLE_BASE_LIBS} STATIC ${base_src})

####### build shared lib #######
# ADD_LIBRARY(${SIMPLE_BASE_LIBS} SHARED ${base_src})

####### INSTALL PYTHON #######
# INSTALL(DIRECTORY  
#     ${PROJECT_SOURCE_DIR}/python DESTINATION ${PROJECT_SOURCE_DIR}/build)

####### UINT TEST   ##########
# ENABLE_TESTING()
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake;${CMAKE_MODULE_PATH}")
# SET(GTEST_LIB gtest gtest_main)
# include(googletest)

# ADD_SUBDIRECTORY(third_party/googletest)
# INCLUDE_DIRECTORIES(third_party/googletest/include)

############ build sample #########
ADD_SUBDIRECTORY(samples)

IF(BUILD_USE_STB MATCHES ON)
    ADD_SUBDIRECTORY(benchmark)
ENDIF()